[{"title":"搭建个人博客","url":"/2022/06/04/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","content":"虽然在学习中经常会记录一些东西，但都是使用现成的软件记录，少了一点“创作感”，所以打算自己搭建一个 个人博客 来记录学习到的知识点、遇到的问题以及探索到的新奇东西。由于自己是新手，并且了解到hexo的社区更庞大，遇到问题解决方案更多，所以我的个人博客使用 hexo 搭建，下面是我搭建博客的过程：\n\n一、部署环境1、安装前提在部署hexo的环境之前，需要将 Node.js(版本不低于10.13) 和 Git 安装好。安装好了之后可以使用：\nnode -v   # 查看node版本npm -v    # 查看npm版本\n\n2、安装hexo安装好 Node.js 和 Git 之后，安装 Hexo:\nnpm install -g hexo-cli\n可以通过 hexo -v 查看安装版本。\n二、初始化个人博客接着，创建一个文件夹来放置博客文件以及相关配置文件。进入这个文件夹，初始化博客，开启本地服务器之后，可以访问到本地博客。其相关命令如下（以下命令都可以使用简写，即输入首字母即可，如：server输入s即可）：\nhexo init\t\t# 初始化博客hexo server \t# 在本地启动博客（访问地址：http://localhost:4000/）\n\n三、写博客hexo new &quot;your blog name&quot;  # 新增博客hexo generate  # 生成\n我们可以通过 new 命令新增博客，新增的博客会被放在本地博客目录下的 &#x2F;source&#x2F;_posts 中。在对新增文件进行编辑之后，使用 generate 进行生成静态文件。\n四、部署到远端在这里，远端部署选择了免费的github，首先需要到github创建一个仓库，仓库名需要以 .github.io 结尾，同时，还需要把仓库设置为 public ，如：\n接着，需要安装一个 hexo-deployer-git库：\nnpm install hexo-deployer-git\n然后到博客文件夹下的 _config.yml 的deploy进行文件配置：\n# Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy:  type: git  repository: xxx[your github repository]  branch: master\nrepository为GitHub仓库的远程地址，分支默认为主分支。在更改完相关配置之后，通过 hexo generate 生成静态文件，最后通过 hexo deploy 部署到远程：\nhexo generate # 生成静态文件hexo deploye  # 部署到远端\n部署成功之后，可以直接使用仓库名访问。\n五、配置主题在 hexo官网 中找到喜欢的主题，进入相关的github页面，按照其要求克隆到本地或者使用npm下载。下载下来的主题文件是预先配置好的，如果需要更改，需要到主题文件夹下的 _config.yml 进行相关修改。\n六、相关库个人博客可以添加搜索功能，不过需要下载相关库：\nnpm install hexo-generator-searchdb\n并且需到Hexo配置文件**_config.yml**写配置如下：\n# Search## See: https://github.com/theme-next/hexo-generator-searchdbsearch:  path: search.json  field: post  content: true  format: striptags\n然后还需将主题配置文件 _config.yml 的 local_search.enable 配置项的值设为 true。\nlocal_search:  enable: true","categories":["配置类"],"tags":["hexo"]},{"title":"git错误大集及解决方式","url":"/2022/06/04/git%E9%94%99%E8%AF%AF%E5%A4%A7%E9%9B%86%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8F/","content":"在使用 git 的时候会出现各种错误，这篇是对错误的总结。\n错误1fatal:Authentication failed\n原因：密码错误\n错误2在将代码推给远程分支的时候，出现了以下错误：\nfatal: unable to access &#x27;https://github.com/BloquearaLua/xxx.git/&#x27;: Failed to connect to github.com port 443 after 150226 ms: Connection refused\n\n错误3fatal: unable to access &#x27;https://github.com/BloquearaLua/xxx.git/&#x27;: OpenSSL SSL_read: Connection was reset, errno 10054# 解决办法：git config --global http.sslVerify &quot;false&quot;\n\n错误4fatal: unable to access &#x27;https://github.com/BloquearaLua/xxx.git/&#x27;: Failed to connect to github.com port 443 after 21103 ms: Timed out# 解决办法：git config --global --unset http.proxygit config --global --unset https.proxy\n\n错误5在将代码推送给远程分支的时候，遇到以下错误：\nfatal: the remote end hung up unexpectedly\n这个错误是指推送的项目体积太大了，需要修改一下buffer的大小，它的单位是b，524288000B相当于500M左右：\ngit config --local http.postBuffer 524288000","categories":["git"],"tags":["error"]},{"title":"解决github网速过慢问题","url":"/2022/06/04/%E8%A7%A3%E5%86%B3github%E7%BD%91%E9%80%9F%E8%BF%87%E6%85%A2%E9%97%AE%E9%A2%98/","content":"换了电脑，原先对github的配置全都得重新配置。首先，就是访问github的速度太慢了。下面是解决方式之一：\n1. 查询首先，需要到 IPAddress 找 github.com 和 github.global.ssl.fastly.net 对应的 IP地址：\n\n\n\n\n2. 修改本地hosts文件之后修改本地的hosts文件，其位置如下：\n\nC:\\Windows\\System32\\drivers\\etc\n\n在hosts文件后面增加：\n140.82.113.4  \tgithub.com199.232.69.194\tgithub.global.ssl.fastly.net","categories":["git"],"tags":["git"]}]